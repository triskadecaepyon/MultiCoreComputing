import java.util.concurrent.*;

public class ArraySum {

	static ExecutorService exec = Executors.newCachedThreadPool();
	static int sum(int[] a) throws InterruptedException, ExecutionException {
		// TODO
		Future<Integer> future = exec.submit(new SumTask(a,0,a.length));
		return future.get();
	}
	static class SumTask implements Callable<Integer> {
		int[] a; int start; int size;
		public SumTask(int[] a, int start, int size) {
		// TODO
			this.a = a;
			this.start  = start;
			this.size = size;
		}
		public Integer call() throws InterruptedException, ExecutionException {
		// TODO
			if(size == 1)
			{
				return a[start];
			}
			else{
				int lhisSize = size/2;
				int rhsStart = start+lhisSize;
				int rhsSize = size - lhisSize;
				Future<Integer> lhs = exec.submit(new SumTask(a, start, lhisSize));
				Future<Integer> rhs = exec.submit(new SumTask(a, start, rhsSize));
				return rhs.get()+lhs.get();
			}
		}
	}
	public static void main(String[] args){
		int a[] = {1,2,3,4,5,6,7,8,9,10};
		
		try {
			int answer = ArraySum.sum(a);
			System.out.println("The sum is " + answer);
		}
		catch (Exception e) { System.err.println(e);}

	}
}